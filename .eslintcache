[{"/Users/manojreddymeda/Downloads/youtube-search-demo/src/index.js":"1","/Users/manojreddymeda/Downloads/youtube-search-demo/src/reportWebVitals.js":"2","/Users/manojreddymeda/Downloads/youtube-search-demo/src/pages/Home/Home.js":"3","/Users/manojreddymeda/Downloads/youtube-search-demo/src/components/Navbar/Navbar.js":"4","/Users/manojreddymeda/Downloads/youtube-search-demo/src/components/VideoList/VideoList.js":"5","/Users/manojreddymeda/Downloads/youtube-search-demo/src/components/VideoList/PlayListInfo.js":"6","/Users/manojreddymeda/Downloads/youtube-search-demo/src/components/VideoList/VideoInfo.js":"7","/Users/manojreddymeda/Downloads/youtube-search-demo/src/services/ytapi.service.js":"8","/Users/manojreddymeda/Downloads/youtube-search-demo/src/components/SearchFilter/SearchFilter.js":"9","/Users/manojreddymeda/Downloads/youtube-search-demo/src/utils/utils.js":"10","/Users/manojreddymeda/Downloads/youtube-search-demo/src/components/VideoList/VideoBox.js":"11"},{"size":574,"mtime":1611866246000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1610553728000,"results":"14","hashOfConfig":"13"},{"size":614,"mtime":1611873270000,"results":"15","hashOfConfig":"13"},{"size":483,"mtime":1611865012000,"results":"16","hashOfConfig":"13"},{"size":2189,"mtime":1611888344000,"results":"17","hashOfConfig":"13"},{"size":1643,"mtime":1611888594000,"results":"18","hashOfConfig":"13"},{"size":980,"mtime":1611887142000,"results":"19","hashOfConfig":"13"},{"size":2142,"mtime":1611887094000,"results":"20","hashOfConfig":"13"},{"size":2050,"mtime":1611881592000,"results":"21","hashOfConfig":"13"},{"size":157,"mtime":1611876354000,"results":"22","hashOfConfig":"13"},{"size":3049,"mtime":1611887248000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"8q11xc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"/Users/manojreddymeda/Downloads/youtube-search-demo/src/index.js",[],["49","50"],"/Users/manojreddymeda/Downloads/youtube-search-demo/src/reportWebVitals.js",[],"/Users/manojreddymeda/Downloads/youtube-search-demo/src/pages/Home/Home.js",[],"/Users/manojreddymeda/Downloads/youtube-search-demo/src/components/Navbar/Navbar.js",[],"/Users/manojreddymeda/Downloads/youtube-search-demo/src/components/VideoList/VideoList.js",[],"/Users/manojreddymeda/Downloads/youtube-search-demo/src/components/VideoList/PlayListInfo.js",[],"/Users/manojreddymeda/Downloads/youtube-search-demo/src/components/VideoList/VideoInfo.js",["51","52","53"],"import React from 'react';\r\nimport {\r\n    Card, Button, CardImg, CardTitle, CardText, CardDeck,\r\n    CardSubtitle, CardBody\r\n} from 'reactstrap';\r\nimport VideoBox from './VideoBox'\r\nimport { getThumbUrl } from '../../utils/utils'\r\n\r\nconst VideoInfo = ({ video }) => {\r\n\r\n    const { snippet } = video\r\n\r\n    return (\r\n        <VideoBox video={video} trigger={(\r\n            <Card className=\"selectable h-100\">\r\n                <CardImg top style={{ width: '100%' }} src={getThumbUrl(snippet.thumbnails)} alt=\"Card image cap\" />\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\">{snippet.title}</CardTitle>\r\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"><small>{snippet.description}</small></CardSubtitle>\r\n                </CardBody>\r\n                <div className=\"card-footer bg-transparent\"><small><i>Published on {snippet.publishedAt}</i></small></div>\r\n            </Card>\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default VideoInfo;\r\n","/Users/manojreddymeda/Downloads/youtube-search-demo/src/services/ytapi.service.js",[],"/Users/manojreddymeda/Downloads/youtube-search-demo/src/components/SearchFilter/SearchFilter.js",[],"/Users/manojreddymeda/Downloads/youtube-search-demo/src/utils/utils.js",[],"/Users/manojreddymeda/Downloads/youtube-search-demo/src/components/VideoList/VideoBox.js",["54","55","56"],"import React, { useEffect, useState } from 'react';\r\nimport { Alert, Modal, ModalHeader, ModalBody, Spinner, Badge, ModalFooter, Row, Col, Container } from 'reactstrap';\r\n\r\nimport { getVideoById } from '../../services/ytapi.service'\r\n\r\nconst VideoBox = (props) => {\r\n    const { trigger, video = {} } = props;\r\n    const { contentDetails, snippet } = video;\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [videoData, setVideoData] = useState()\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n            const videoData = await getVideoById(contentDetails.videoId)\r\n            setVideoData(videoData.items[0])\r\n            console.log(videoData)\r\n            setLoading(false)\r\n        }\r\n        if (modal && contentDetails) {\r\n            fetchData()\r\n        }\r\n    }, [contentDetails, modal])\r\n\r\n    return (\r\n        <>\r\n            <span onClick={toggle}>{trigger}</span>\r\n            <Modal isOpen={modal} toggle={toggle} size=\"xl\">\r\n                <ModalHeader toggle={toggle}>{snippet?.title}</ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"d-flex\" style={{ minHeight: 500 }}>\r\n                        <div className=\"m-auto\">\r\n                            {loading &&\r\n                                <Spinner color=\"primary\" />\r\n                            }\r\n                            {videoData &&\r\n                                <div dangerouslySetInnerHTML={{ __html: videoData.player.embedHtml }}></div>\r\n                            }\r\n                            {!loading && !videoData &&\r\n                                <Alert>Unable to play video. </Alert>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                {videoData &&\r\n                    <ModalFooter>\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"mx-3\">\r\n                                Views <Badge color=\"primary\"> {videoData.statistics.viewCount} </Badge>\r\n                            </div>\r\n                            |\r\n                            <div className=\"mx-3\">\r\n                                Likes <Badge color=\"primary\"> {videoData.statistics.likeCount} </Badge>\r\n                            </div>\r\n                            |\r\n                            <div className=\"mx-3\">\r\n                                Dislikes <Badge color=\"primary\"> {videoData.statistics.dislikeCount} </Badge>\r\n                            </div>\r\n                            |\r\n                            <div className=\"ml-3\">\r\n                                Favorites <Badge color=\"primary\"> {videoData.statistics.favoriteCount} </Badge>\r\n                            </div>\r\n                        </div>\r\n                    </ModalFooter>\r\n                }\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default VideoBox;",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":3,"column":11,"nodeType":"63","messageId":"64","endLine":3,"endColumn":17},{"ruleId":"61","severity":1,"message":"65","line":3,"column":39,"nodeType":"63","messageId":"64","endLine":3,"endColumn":47},{"ruleId":"61","severity":1,"message":"66","line":3,"column":49,"nodeType":"63","messageId":"64","endLine":3,"endColumn":57},{"ruleId":"61","severity":1,"message":"67","line":2,"column":77,"nodeType":"63","messageId":"64","endLine":2,"endColumn":80},{"ruleId":"61","severity":1,"message":"68","line":2,"column":82,"nodeType":"63","messageId":"64","endLine":2,"endColumn":85},{"ruleId":"61","severity":1,"message":"69","line":2,"column":87,"nodeType":"63","messageId":"64","endLine":2,"endColumn":96},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'CardText' is defined but never used.","'CardDeck' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]